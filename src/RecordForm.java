import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class RecordForm extends JDialog {
    public JPanel panel1;
    private JPanel panel3;
    private JButton btAdd;
    private JScrollPane spanel1;
    private JTable table1;
    private DefaultTableModel model;
    private TableColumn tc;
    private MainForm mainFm;
    private String Company;

    public RecordForm() {
        init();
    }

    public RecordForm(MainForm _mainFm, String _company) {
        this.mainFm = _mainFm;
        this.Company = _company;
        init();
    }

    private void OpenNewRecordForm() {
        NewRecordForm newRecordForm = new NewRecordForm(this);
        newRecordForm.setVisible(true);
        getContentPane().add(newRecordForm);
    }

    public void AddRow(String name, String type, String value, String ttl) {
        model.addRow(new Object[]{name, type, value, ttl, "Edit", "Delete"});
        table1.setModel(model);
    }

    public void EditRow(String value, int row, int column) {
        model.setValueAt(value, row, column);
    }

    public void DeleteRow(int row) {
        model.removeRow(row);
    }

    private void init() {
        setTitle("Domain Manager-" + Company);
        setContentPane(panel1);
        setModal(true);
        //getRootPane().setDefaultButton(buttonOK);
        int Width = 600;
        int Height = 600;
        // setSize(Width,Height);
        Dimension dim = new Dimension(Width, Height);
        setMaximumSize(dim);
        setMinimumSize(dim);
        setLocationRelativeTo(this.getOwner());
        model = new DefaultTableModel(//
                new Object[][]{},//data
                new Object[]{"Name", "Type", "Value", "TTL", "Edit", "Delete"} // name of value
        );
        table1.setModel(model);
        table1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table1.setRowHeight(25);
        JTableHeader tableHeader = table1.getTableHeader();
        tableHeader.setPreferredSize(new Dimension(tableHeader.getWidth(), 30));
        ButtonColumn editButtonColumn = new ButtonColumn(this, table1, 4);
        ButtonColumn deleteButtonColumn = new ButtonColumn(this, table1, 5);
        btAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                // JOptionPane.showMessageDialog(null, "comments", "title", JOptionPane.ERROR_MESSAGE);
                OpenNewRecordForm();
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel1.add(panel3, BorderLayout.SOUTH);
        btAdd = new JButton();
        Font btAddFont = this.$$$getFont$$$("Microsoft YaHei UI", -1, 12, btAdd.getFont());
        if (btAddFont != null) btAdd.setFont(btAddFont);
        btAdd.setHideActionText(true);
        btAdd.setHorizontalAlignment(0);
        btAdd.setHorizontalTextPosition(0);
        btAdd.setLabel("Add");
        btAdd.setText("Add");
        panel3.add(btAdd);
        spanel1 = new JScrollPane();
        panel1.add(spanel1, BorderLayout.CENTER);
        table1 = new JTable();
        table1.setFillsViewportHeight(false);
        Font table1Font = this.$$$getFont$$$("Microsoft YaHei UI", -1, 12, table1.getFont());
        if (table1Font != null) table1.setFont(table1Font);
        spanel1.setViewportView(table1);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
